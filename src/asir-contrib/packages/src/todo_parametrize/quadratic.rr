/* $OpenXM$ */
/*
 Input: 既約三元二次形式F(x,y,z).
 Output: F(x,y,z)=0 に自明でない整数解があればそれを,
	 なければ"no integer solution" を返す。
*/

def intpt(F){
    if(irr_conic(F)=="reducible")
	return("***Input must be irreducible in C[x,y,z]***");

    G=qnormal(F);

    L=qLtozL([G[0][0],G[1][0],G[2][0]]);

    S=legendre(L[0],L[1],L[2]);
    if(S=="no integer solution")
	return(S);

    List=[G[0][1]-S[0],G[1][1]-S[1],G[2][1]-S[2]];

    Gr=td_gr(List,[z,y,x],2);

    X=Gr[0]; Y=Gr[1]; Z=Gr[2];
    Pt=[lzero(X,x),lzero(Y,y),lzero(Z,z)];

    return(qLtozL(Pt));
}

/*
 Input: 有理数を係数にもつn元二次形式F(x1,x2,...,xn).
 Output: F=A1*L1^2+...+An*Ln^2 
	 (L1,...,Lnはx1,...,xnに関する有理数係数の一次式)
	 を満たす[[A1,L1],[A2,L2],...,[An,Ln]].
*/

def qnormal(F){
    V=vars(F); L=length(V);

    if(L==0)
	return([]);

    if(L==1){
	X=V[0];
	return([[coef(F,2,X),X]]);
    }

    if(L>=2){
        for(I=0,Q=0; I<L; I++)
            if(deg(F,V[I])==2){
		T=squarerize(F,V[I]);
		G=cons(T[0],qnormal(T[1]));
		Q=1;
		break;
	    }

	if(Q==0){
	    X=V[0]; Y=V[1];
	    FF=subst(F,Y,X+Y);
	    T=qnormal(FF); K=length(T);

	    for(G=[],I=K-1; I>=0; I--)
		G=cons([T[I][0],subst(T[I][1],Y,-X+Y)],G);
        }

	return(G);
    }
}

def squarerize(F,X){
    A=coef(F,2,X); B=coef(F,1,X); C=coef(F,0,X);
    F_=C-B^2/(4*A);
    return([[A,X+B/(2*A)],F_]);
}

/*
 Input: 0でない整数A,B,C.
 Output: A*x^2+B*y^2+C*z^2=0 に整数解があれば解
	 [x,y,z]を、なければ"no integer solution" を返す。
*/

def legendre(A,B,C){
    if(A==0 || B==0 || C==0)
	return("***Input must be non zero numbers***");

    if((M=multi_igcd([A,B,C]))>1){
	A=idiv(A,M);
	B=idiv(B,M);
	C=idiv(C,M);
    }

    TA=normal_form(A); A=TA[0]; P=TA[1];
    TB=normal_form(B); B=TB[0]; Q=TB[1];
    TC=normal_form(C); C=TC[0]; R=TC[1];

    S=pre_legendre(A,B,C);

    if(S=="no integer solution")
	return(S);
    else
	return([Q*R*S[0],R*P*S[1],P*Q*S[2]]);
}

/*
 Input: square free でGCD(A,B,C)=1 の整数の組A,B,C.
 Output: A*x^2+B*y^2+C*z^2=0 に整数解があれば解
	 [x,y,z]を、なければ"no integer solution" を返す。
*/

def pre_legendre(A,B,C){
    Q=normal_form(A*B*C)[1];	/* Q は正数 */

    if(Q==1)
	return(legendre_(A,B,C));

    T=0;
    if(Q!=1){
	P=pari(factorint,Q)[0][0];

	QR=iqr(A,P);
	if(QR[1]==0){
	    A=QR[0];
	}else{
	    T="A";
	    A=P*A;
	}

	QR=iqr(B,P);
	if(QR[1]==0){
	    B=QR[0];
	}else{
	    T="B";
	    B=P*B;
	}

	QR=iqr(C,P);
	if(QR[1]==0){
	    C=QR[0];
	}else{
	    T="C";
	    C=P*C;
	}

	S=pre_legendre(A,B,C);
	if(S=="no integer solution"){
	    return(S);
	}else{
	    if(T=="A")
		return([P*S[0],S[1],S[2]]);

	    if(T=="B")
		return([S[0],P*S[1],S[2]]);

	    if(T=="C")
		return([S[0],S[1],P*S[2]]);
	}
    }
}

/*
 Input: 0でない整数A,B,C. ただしA*B*C はsquare free
	でなければならない。
 Output: A*x^2+B*y^2+C*z^2=0 に整数解があれば解
	 [x,y,z]を、なければ"no integer solution" を返す。
*/

def legendre_(A,B,C){
    if(check_square_free(A*B*C)==-1)
	return("***Arguments must be pairwise relatively prome and square free***");

    if(aRb(-A*B,C)==-1 || aRb(-B*C,A)==-1 || aRb(-C*A,B)==-1
	|| (A>0 && B>0 && C>0) || (A<0 && B<0 && C<0))
	return("no integer solution");

    if(A*B*C>0){
	A=-A; B=-B; C=-C;
    }

    T=0;
    if(A<0){
	T="A"; AA=B; BB=C; CC=A;
    }
    if(B<0){
	T="B"; AA=A; BB=C; CC=B;
    }
    if(C<0){
	T="C"; AA=A; BB=B; CC=C;
    }

    S=pre_legendre_(-AA*CC,-BB*CC);
    Z=idiv(S[2],CC);

    if(T=="A")
	return([Z,S[0],S[1]]);
    if(T=="B")
	return([S[0],Z,S[1]]);
    if(T=="C")
	return([S[0],S[1],Z]);
}

/*
 Input:	平方因子を含まない正数A,B.
 Output: A*x^2+B*y^2=z^2 に整数解があれば解[x,y,z]
	 を返し,なければ"no integer solution" を返す。

 Remark: 入力される整数が上の条件を満たしていないと
	 意味のある答えを返す保証はない。入力された
	 A,B が平方因子を含んでいないかどうかはチェ
	 ックされない。ユーザーの責任に任せている。
*/

def pre_legendre_(A,B){
    if(A<=0 || B<=0)
	return("***Input must be positive***");

    D=igcd(A,B);	/* Dは正 */
    if(aRb(A,B)==-1 || aRb(B,A)==-1 || aRb(-(A*B)/D^2,D)==-1)
	return("no integer solution");

    if(A==B){
	S=fermat(B);
	return([S[0],S[1],S[0]^2+S[1]^2]);
    }

    if(A==1)
	return([1,0,1]);

    if(B==1)
	return([0,1,1]);

    Reverse=0;
    if(B>A){
	C=A; A=B; B=C; Reverse=1;
    }

    X=aRb(B,A);
    if(X>A/2)
	X=X-A;	/* -A/2<X<=A/2 */

    T=idiv(X^2-B,A);

    L=normal_form(T);
    A_=L[0]; M=L[1];

    S=pre_legendre_(A_,B);

    U=A_*S[0]*M;
    V=X*S[1]+S[2];
    W=S[2]*X+B*S[1];

    if(Reverse==1)
	return([V,U,W]);
    else
	return([U,V,W]);
}

/*
 Input: 整数A,B.
 Output: 合同方程式 x^2=A (mod B)に解があれば 
	 x(0<=x<|B|) を返し,なければ-1を返す。
*/

def aRb(A,B){
    B=abs(B);

    for(X=0; X<B; X++)
	if((X^2-A)%B==0)
	    return(X);

    return(-1);
}

/*
 Input: 整数N.
 Output: 絶対値|N|.
*/

def abs(N){
    if(N<0)
	return(-N);
    else
	return(N);
}

/*
 Input: 正数N.
 Output: N=A^2+B^2 を満たす整数A,B があれば[A,B](0<=A,B<=N)
	 を返し,なければ-1 を返す。
*/

def fermat(N){
    if(N<=0)
	return("***Argument is not positive***");

    for(M=0,Q=N-M^2; Q>0; M++,Q=N-M^2)
	if((R=square_root(Q))!=-1)
	    return([M,R]);

    return(-1);
}

/*
 Input: 整数N.
 output: N が素数ならば1 を返し,素数でなければ-1 を返す。
*/

def check_prime(N){
    Mat=pari(factorint,N);
    if(N!=1 && size(Mat)==[1,2] && Mat[0][1]==1)
	return(1);
    else
	return(-1);
}

/*
 Input: 0でない整数N.
 Output: N がsquare free (素数の冪乗を約数に持たないこと)
	 ならば1 を,そうでなければ-1 を返す。
*/

def check_square_free(N){
    if(N==0)
	return("***Input must be non zero number***");

    T=normal_form(N);
    if(T[1]==1)
	return(1);
    else
	return(-1);
}

/*
 Input: 整数N.
 Output: N が平方数ならばN^(1/2) を返し,平方数でなければ
	 -1 を返す。
*/

def square_root(N){
    if(N==0)
	return(0);

    T=normal_form(N);
    if(T[0]!=1)
	return(-1);
    else
	return(T[1]);
}

/*
 Input: 0でない整数N.
 Output: N=A*B^2 (A はsquare free,B>0)と表したときの[A,B].
*/

def normal_form(N){
    if(N==0)
	return("***Input must be non zero number***");

    Sign=1;
    if(N<0){
	N=-N; Sign=-1;
    }

    if(N!=1){
	Mat=pari(factorint,N);
	L=size(Mat)[0];
	for(A=1,B=1,I=0; I<L; I++){
	    P=Mat[I][0]; R=Mat[I][1];
	    QR=iqr(R,2);	/* P^R=P^(2*QR[0]+QR[1]) */
	    A=A*P^QR[1];
	    B=B*P^QR[0];
	}
    }else{
	A=1;
	B=1;
    }

    if(Sign==-1)
	return([-A,B]);
    else
	return([A,B]);
}

/*
 Input: 有理数を成分にもつリスト。
 Output: 入力されたリストを有理数倍してGCD=1 の
	 整数成分のリストに直す。
*/

def qLtozL(QL){
    L=length(QL);
    for(List=[],I=L-1; I>=0; I--)
	List=cons(nm(QL[I]),List);

    GCD=multi_igcd(List);

    for(List=[],I=L-1; I>=0; I--)
	List=cons(dn(QL[I]),List);

    LCM=multi_ilcm(List);

    for(ZL=[],I=L-1; I>=0; I--)
	ZL=cons(LCM*QL[I]/GCD,ZL);

    return(ZL);
}

/*
 Input: 整数を成分とするリスト。
 Output: 最大公約数。
*/

def multi_igcd(L){
    K=length(L);

    if(K==1)
	return(L[0]);

    if(K==2)
	return(igcd(L[0],L[1]));

    if(K>2)
	return(igcd(L[0],multi_igcd(cdr(L))));
}

def multi_ilcm(L){
    K=length(L);

    if(K==1)
	return(L[0]);

    if(K==2)
	return(ilcm(L[0],L[1]));

    if(K>2)
	return(ilcm(L[0],multi_ilcm(cdr(L))));
}

def check_intpt(F){
    Pt=intpt(F);
    print(Pt);

    if(Pt!=-1)
	if(subst(F,x,Pt[0],y,Pt[1],z,Pt[2])==0)
	    return("intpt correct");
	else
	    return("intpt incorrect");
}

def check_qnormal(F){
    G=qnormal(F);
    print(G);
    L=length(G);
    for(I=0,S=0; I<L; I++)
	S=S+G[I][0]*G[I][1]^2;
    
    if(F-S==0)
	return("qnormal correct");
    else
	return("qnormal incorrect");
}

def check_legendre(A,B,C){
    S=legendre(A,B,C);
    if(S=="no integer solution"){
	return(S);
    }else{
	print(S);
	if(A*S[0]^2+B*S[1]^2+C*S[2]^2==0)
	    return("legendre correct");
	else
	    return("legendre incorrect");
    }
}

def check_pre_legendre(A,B,C){
    S=pre_legendre(A,B,C);
    if(S=="no integer solution"){
	return(S);
    }else{
	print(S);
	if(A*S[0]^2+B*S[1]^2+C*S[2]^2==0)
	    return("pre_legendre correct");
	else
	    return("pre_legendre incorrect");
    }
}

def check_legendre_(A,B,C){
    S=legendre_(A,B,C);
    if(S=="no integer solution"){
	return(S);
    }else{
	print(S);
	if(A*S[0]^2+B*S[1]^2+C*S[2]^2==0)
	    return("legendre_ correct");
	else
	    return("legendre_ incorrect");
    }
}

def example(N){
    if(N==1)
	return("legendre(79,127,-199);");
    if(N==2)
	return("legendre(421,-751,-133);");
}
end$
